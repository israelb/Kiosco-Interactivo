package  com.camaras{	import com.camaras.textField;		import flash.display.DisplayObject;    import flash.display.MovieClip;	    import flash.display.Sprite;	    //import flash.events.*;	    import flash.media.Video;	    import flash.net.NetConnection;    import flash.net.NetStream;		import flash.media.SoundTransform;	import flash.utils.Timer;	import flash.events.TimerEvent;	import flash.events.MouseEvent;	import flash.events.NetStatusEvent;		//Efectos	import com.greensock.*;	import com.greensock.easing.*;	import com.greensock.plugins.*;		public class PlayerIntro extends MovieClip{				private var _connect_nc:NetConnection = new NetConnection();				private var _video:Video;				private var _mySound:SoundTransform;				private var _nsStream:NetStream;				private var _heightVideo:Number;		private var _widthVideo:Number;				private var _bocina:bocina;				private var _texto:textField;		private var _square:Sprite		private var _mc_titleVideo:MovieClip		private var _titleVideo:String		private var _videoName:String			private const SECONDS:Number = 15;		private const SECOND_START_COUNT_DOWN:Number = 10;		private var VOLUME:Number = 0;								/**		 * Constructor. <br /><br />		 		 * 		 * @param vars 		 */		public function PlayerIntro(videoName:String, titleVideo:String, w:int, h:int) {					_titleVideo = titleVideo;			_videoName = videoName;			//trace("NOMBRE DEL VIDEO: -----------> " + videoName);			_heightVideo = h;			_widthVideo = w;			_connect_nc.connect(null);						_nsStream = new NetStream(_connect_nc);						var customClient:Object = new Object();			 							_nsStream.client = customClient;			_nsStream.addEventListener(NetStatusEvent.NET_STATUS, netStatusHandler);					_video = new Video();						_video.attachNetStream(_nsStream);				_nsStream.play(videoName);								//Sound			_mySound = _nsStream.soundTransform;			_mySound.volume = VOLUME;			_nsStream.soundTransform = _mySound;										sizeVideo(w,h)			addChild(_video);									craeteHeader();		}				//Stops the current video when there are an event on the butons next and previus on the carrousel slider		public function playVideo():void{			trace("RESUME VIDEO!!!");				_nsStream.play(_videoName);					}				public function stopVideo():void{			trace("stops VIDEO!!!");				_nsStream.close();					}				private function craeteHeader():void{			var altoBarra:Number = (15 * _heightVideo) / 100;			_square = new Sprite();			_square.x = 0;			_square.y = 0;			addChild(_square);						_square.graphics.beginFill(0x000000,.5);			_square.graphics.drawRect(0,0,_widthVideo,altoBarra);			_square.graphics.endFill();								_bocina = new bocina();				var medidaBocina:Number = (_widthVideo * 34) / 650;			_bocina.width = medidaBocina;			_bocina.height = medidaBocina;						_bocina.x = (30 / 2);			_bocina.y = (altoBarra / 2) -(_bocina.height/2);			_square.addChild(_bocina);								_mc_titleVideo = new mc_title_video();			_mc_titleVideo.title.scaleX = (_widthVideo * 1 ) / 650;			_mc_titleVideo.title.scaleY = (_widthVideo * 1 ) / 650;			_mc_titleVideo.title.text = _titleVideo;						_mc_titleVideo.x = _bocina.width + 20;			_mc_titleVideo.y = (altoBarra / 2) -(_mc_titleVideo.height/2) -1;			var medidaTexto:Number =(_mc_titleVideo.width * 600 ) / 650;			_mc_titleVideo.width = medidaTexto;			_square.addChild(_mc_titleVideo);					}														//Size of the video		private function sizeVideo(w:int, h:int):void{								_video.width = w;			_video.height = h;					}										private function netStatusHandler(nse:NetStatusEvent):void {						// handles net status events			switch (nse.info.code) {				case "NetStream.Play.StreamNotFound" :					break;				case "NetStream.Play.Stop" :					//Finish Video										_nsStream.seek(0); //Loop					break;				case "NetStream.Buffer.Full" :					break;				case "NetStream.Buffer.Empty" :					break;			}		}		private function onMetaData(p_info:Object):void {			for (var propName:String in p_info) {				//output_txt.appendText(propName + " = " + p_info[propName] + "\n");			}			_video.width = p_info.width;			_video.height = p_info.height;		}	}// end player	}