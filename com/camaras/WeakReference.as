package com.camaras{    import flash.utils.*;     /**    *   A weak reference to an object inspired by Java's WeakReference class:    *     http://java.sun.com/javase/6/docs/api/java/lang/ref/WeakReference.html    *   This class holds an object, but if that object is ever not referenced by    *   anyone but the WeakReference, it is garbage collected and no longer    *   retrievable.    *   @author Jackson Dunstan (jackson@jacksondunstan.com)    */    public class WeakReference    {        /** Dictionary that holds the object */        private var __dictionary:Dictionary;         /**        *   Make a weak reference to an object        *   @param referent Object this weak reference should refer to        */        public function WeakReference(referent:*)        {            // Use weak key support            __dictionary = new Dictionary(true);             // Use the object as the key so it is weak. Use a dummy value since            // we do not care about it.            __dictionary[referent] = true;        }         /**        *   Get the object this weak reference refers to        *   @return The object this weak reference refers to or undefined if the        *           object was garbage collected because no other objects other        *           than the weak referene refered to it.        */        public function get referent(): *        {            // We don't have a strong reference to the referent so we have to            // search for it. Luckily we know that there is only zero or one            // iterations possible since we only store one item in the            // dictionary: the referent.            for (var referent:* in __dictionary)            {                return referent;            }            return undefined;        }    }}